<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>vaccination</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>vaccination</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<sonar.organization>sheikhsid1</sonar.organization>
  		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.sources>src/main/java,src/main/resources/templates</sonar.sources>
		<sonar.coverage.exclusions>
			**/VaccinationApplication.*,
			**/dto/*.*,
			**/entities/*.*,
		</sonar.coverage.exclusions>
		<org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>htmlunit-driver</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>5.2.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		 <groupId>org.testcontainers</groupId>
		 <artifactId>testcontainers</artifactId>
		 <version>1.10.5</version>
		 <scope>test</scope>
		 </dependency>
		 
		 <dependency>
	      <groupId>org.junit.vintage</groupId>
	      <artifactId>junit-vintage-engine</artifactId>
	      <scope>test</scope>
	      <exclusions>
	        <exclusion>
	          <groupId>org.hamcrest</groupId>
	          <artifactId>hamcrest-core</artifactId>
	        </exclusion>
	      </exclusions>
	    </dependency>

		 
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
							-Amapstruct.defaultComponentModel=spring
						</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<includes>
						<include>**/*IT.java</include>
					</includes>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}/target/classes</additionalClasspathElement>
					</additionalClasspathElements>
					<parallel>none</parallel>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		      </plugin>
			 <plugin>
				<groupId>io.fabric8</groupId>
			 	<artifactId>docker-maven-plugin</artifactId>
			 	<version>0.27.2</version>
			 	<configuration>
			 		<images>
			 			<image>
			 				<name>mysql</name>
			 				<run>
			 					<ports>
			 						<port>3308:3306</port>
			 					</ports>
			 				</run>
			 			</image>
			 		</images>
			 	</configuration>
			 	<executions>
			 		<execution>
			 			<id>docker:start</id>
			 			<phase>pre-integration-test</phase>
			 			<goals>
			 				<goal>start</goal>
			 			</goals>
			 		</execution>
			 		<execution>
			 			<id>docker:stop</id>
			 			<phase>post-integration-test</phase>
			 			<goals>
			 				<goal>stop</goal>
			 			</goals>
			 		</execution>
			 	</executions>
			</plugin> 
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
					<jacocoReports>
						<jacocoReport>${project.build.directory}/jacoco-ut/jacoco.xml</jacocoReport>
						<jacocoReport>${project.build.directory}/jacoco-it/jacoco.xml</jacocoReport>
					</jacocoReports>
					<failOnServiceError>false</failOnServiceError>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.2.3</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.9.0.2155</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<configuration>
					<excludes>
						<exclude>**/entities/*.*</exclude>
						<exclude>**/VaccinationApplication.*</exclude>
						<exclude>**/htmlunit/*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.4.9</version>
				<executions>
					<execution>
						<id>pit-report</id>
						<phase>test</phase>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>0.12</version>
					</dependency>

				</dependencies>
				<configuration>
					<targetClasses>
						<param>com.example.vaccination.services.*</param>
						<param>com.example.vaccination.controller.*</param>
						<param>com.example.vaccination.mapper.*</param>
					</targetClasses>
					<excludedTestClasses>
						<param>com.example.vaccination.**.*IT</param>
						<param>com.example.vaccination.controller.**.*IT</param>
						<param>com.example.vaccination.controller.PtControllerTestETOE</param>
					</excludedTestClasses>
					<targetTests>
						<param>com.example.vaccination.service.*</param>
						<param>com.example.vaccination.controller.*</param>
						<param>com.example.vaccination.mapper.*</param>
					</targetTests>					
					<avoidCallsTo>
						<avoidCallsTo>java.util.logging</avoidCallsTo>
						<avoidCallsTo>org.apache.log4j</avoidCallsTo>
						<avoidCallsTo>org.slf4j</avoidCallsTo>
						<avoidCallsTo>org.apache.commons.logging</avoidCallsTo>
					</avoidCallsTo>
					<mutators>
						<mutator>DEFAULTS</mutator>
					</mutators>
					<mutationThreshold>75</mutationThreshold>
					<outputFormats>
						<outputFormat>XML</outputFormat>
						<outputFormat>HTML</outputFormat>
					</outputFormats>
				</configuration>
			</plugin>
		</plugins>
		<finalName>spring-boot-vaccination</finalName>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
			</plugin>

			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.6.3</version>
				<configuration>
					<skip>false</skip>
					<reportsDirectory>${project.build.directory}/pit-custom-output-dir</reportsDirectory>
					<sourceDataFormats>
						<sourceDataFormat>HTML</sourceDataFormat>
					</sourceDataFormats>
					<siteReportName>my-pit-report-name</siteReportName>
					<siteReportDescription>my pit report custom description</siteReportDescription>
					<siteReportDirectory>pit-custom-site-directory</siteReportDirectory>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>e2e-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<skip.unit-tests>true</skip.unit-tests>
				<skip.integration-tests>true</skip.integration-tests>
			</properties>
			<build>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>reserve-tomcat-port</id>
							<goals>
								<goal>reserve-network-port</goal>
							</goals>
							<phase>process-resources</phase>
							<configuration>
							<portNames>
								<portName>tomcat.http.port</portName>
							</portNames>
							</configuration>
						</execution>
				</executions>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>pre-integration-test</id>
							<goals>
								<goal>start</goal>
							</goals>
							<configuration>
							<arguments>
								<argument>--server.port=${tomcat.http.port}</argument>
							</arguments>
							</configuration>
						</execution>
						<execution>
						<id>post-integration-test</id>
						<goals>
							<goal>stop</goal>
						</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<id>e2e-tests</id>
							<configuration>
								<includes>
									<include>com.example.vaccination.controller.**.*ETOE.java</include>
								</includes>
							</configuration>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
						</executions>
						<configuration>
							<systemPropertyVariables>
								<server.port>${tomcat.http.port}</server.port>
							</systemPropertyVariables>
						</configuration>
				</plugin>
			</plugins>
			</build>
		</profile>
	</profiles>
</project>
